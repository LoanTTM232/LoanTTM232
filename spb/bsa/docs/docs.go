// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "LoanTT",
            "email": "loanTT@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "login",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "login failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "description": "refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "refresh token",
                "responses": {
                    "200": {
                        "description": "refresh token success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "refresh token failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register new user",
                "parameters": [
                    {
                        "description": "register",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "register success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "register failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/locations": {
            "get": {
                "description": "Get all locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Get all locations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number items on page",
                        "name": "i",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "p",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by",
                        "name": "b",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order type",
                        "name": "t",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all locations success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.LocationsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Get all locations failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Create location",
                "parameters": [
                    {
                        "description": "Create location",
                        "name": "Group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create location success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.LocationsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Create location failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/locations/{id}": {
            "delete": {
                "description": "Delete location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Delete location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "location id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete location success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Delete location failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "patch": {
                "description": "Update location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Update location by id",
                "parameters": [
                    {
                        "description": "Location data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update location by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.LocationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Update location by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/unit-prices": {
            "get": {
                "description": "Get all unit_prices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-prices"
                ],
                "summary": "Get all unit_prices",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number items on page",
                        "name": "i",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "p",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by",
                        "name": "b",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order type",
                        "name": "t",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all unit_prices success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.UnitPricesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Get all unit_prices failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create unitPrice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-prices"
                ],
                "summary": "Create unitPrice",
                "parameters": [
                    {
                        "description": "Create unitPrice",
                        "name": "Group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateUnitServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create unitPrice success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.UnitServiceResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Create unitPrice failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/unit-prices/{id}": {
            "delete": {
                "description": "Get unitPrice by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-prices"
                ],
                "summary": "Get unitPrice by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UnitPrice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get unitPrice by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Get unitPrice by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "patch": {
                "description": "Update unitPrice by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-prices"
                ],
                "summary": "Update unitPrice by id",
                "parameters": [
                    {
                        "description": "UnitPrice data",
                        "name": "unitPrice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUnitPriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update unitPrice by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.UnitPriceResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Update unitPrice by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/unit-services": {
            "get": {
                "description": "Get all unit_services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-services"
                ],
                "summary": "Get all unit_services",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number items on page",
                        "name": "i",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "p",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by",
                        "name": "b",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order type",
                        "name": "t",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all unit_services success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.UnitServicesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Get all unit_services failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/unit-services/{id}": {
            "delete": {
                "description": "Get unitService by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-services"
                ],
                "summary": "Get unitService by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UnitService ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get unitService by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Get unitService by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "patch": {
                "description": "Update unitService by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-services"
                ],
                "summary": "Update unitService by id",
                "parameters": [
                    {
                        "description": "UnitService data",
                        "name": "unitService",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUnitServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update unitService by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.UnitServiceResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Update unitService by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/units": {
            "post": {
                "description": "Create unit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Create unit",
                "parameters": [
                    {
                        "description": "Create unit",
                        "name": "Group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create unit success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.UnitResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Create unit failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/units/{id}": {
            "delete": {
                "description": "Get unit by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Get unit by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get unit by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Get unit by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "patch": {
                "description": "Update unit by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Update unit by id",
                "parameters": [
                    {
                        "description": "Unit data",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update unit by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.UnitResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Update unit by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number items on page",
                        "name": "i",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "p",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by",
                        "name": "b",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order type",
                        "name": "t",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all users success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.GetUsersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Get all users failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "Create user",
                        "name": "Group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create user success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/spb_bsa_internal_user_model.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Create user failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "delete": {
                "description": "Get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get user by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Get user by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "patch": {
                "description": "Update user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user by id",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update user by id success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/spb_bsa_internal_user_model.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Update user by id failed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ErrorResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AddressResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "address_id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/model.LocationResponse"
                },
                "location_geography": {
                    "$ref": "#/definitions/model.LocationGeography"
                },
                "unit_id": {
                    "type": "string"
                }
            }
        },
        "model.CreateAddressRequest": {
            "type": "object",
            "required": [
                "address",
                "location",
                "location_geography"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 255
                },
                "location": {
                    "$ref": "#/definitions/model.LocationRequest"
                },
                "location_geography": {
                    "$ref": "#/definitions/model.LocationGeography"
                },
                "unit_id": {
                    "type": "string"
                }
            }
        },
        "model.CreateLocationRequest": {
            "type": "object",
            "required": [
                "locations"
            ],
            "properties": {
                "locations": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/model.LocationRequest"
                    }
                }
            }
        },
        "model.CreateMediaRequest": {
            "type": "object",
            "required": [
                "file_path",
                "file_type",
                "hash",
                "uploaded_at"
            ],
            "properties": {
                "file_path": {
                    "type": "string",
                    "maxLength": 255
                },
                "file_type": {
                    "type": "string",
                    "maxLength": 255
                },
                "hash": {
                    "type": "string",
                    "maxLength": 255
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "model.CreateSportTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "model.CreateUnitPriceRequest": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "model.CreateUnitRequest": {
            "type": "object",
            "required": [
                "address",
                "close_time",
                "club_id",
                "media",
                "name",
                "open_time",
                "phone",
                "sport_types",
                "unit_prices"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/model.CreateAddressRequest"
                },
                "close_time": {
                    "type": "string"
                },
                "club_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 3000
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CreateMediaRequest"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "open_time": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "sport_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CreateSportTypeRequest"
                    }
                },
                "status": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                },
                "unit_prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CreateUnitPriceRequest"
                    }
                },
                "unit_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CreateUnitServiceRequest"
                    }
                }
            }
        },
        "model.CreateUnitServiceRequest": {
            "type": "object",
            "required": [
                "icon"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 3000
                },
                "icon": {
                    "type": "string",
                    "maxLength": 255
                },
                "price": {
                    "type": "number"
                },
                "unit_id": {
                    "type": "string"
                }
            }
        },
        "model.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "model.GetUsersResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spb_bsa_internal_user_model.UserResponse"
                    }
                }
            }
        },
        "model.LocationGeography": {
            "type": "object",
            "required": [
                "latitude",
                "longitude"
            ],
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.LocationRequest": {
            "type": "object",
            "required": [
                "city",
                "district",
                "province"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "description": {
                    "type": "string",
                    "maxLength": 3000
                },
                "district": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "province": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                }
            }
        },
        "model.LocationResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "city_slug": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "district_slug": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "province_slug": {
                    "type": "string"
                }
            }
        },
        "model.LocationsResponse": {
            "type": "object",
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LocationResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                }
            }
        },
        "model.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/spb_bsa_internal_auth_model.UserResponse"
                }
            }
        },
        "model.MediaResponse": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string"
                },
                "file_type": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "media_id": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "model.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                }
            }
        },
        "model.RoleResponse": {
            "type": "object",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spb_bsa_internal_role_model.PermissionResponse"
                    }
                },
                "role_id": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                }
            }
        },
        "model.SportTypeResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "sportType_id": {
                    "type": "string"
                }
            }
        },
        "model.UnitPriceResponse": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string"
                },
                "unitPrice_id": {
                    "type": "string"
                }
            }
        },
        "model.UnitPricesResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "total": {
                    "type": "integer"
                },
                "unit_prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UnitPriceResponse"
                    }
                }
            }
        },
        "model.UnitResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/model.AddressResponse"
                },
                "close_time": {
                    "type": "string"
                },
                "club_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MediaResponse"
                    }
                },
                "name": {
                    "type": "string"
                },
                "open_time": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "sport_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SportTypeResponse"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "unit_id": {
                    "type": "string"
                },
                "unit_prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UnitPriceResponse"
                    }
                },
                "unit_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UnitServiceResponse"
                    }
                }
            }
        },
        "model.UnitServiceResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "unit_id": {
                    "type": "string"
                },
                "unit_service_id": {
                    "type": "string"
                }
            }
        },
        "model.UnitServicesResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "total": {
                    "type": "integer"
                },
                "unit_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UnitServiceResponse"
                    }
                }
            }
        },
        "model.UpdateAddressRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 255
                },
                "location": {
                    "$ref": "#/definitions/model.UpdateLocationRequest"
                },
                "location_geography": {
                    "$ref": "#/definitions/model.LocationGeography"
                },
                "unit_id": {
                    "type": "string"
                }
            }
        },
        "model.UpdateLocationRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "description": {
                    "type": "string",
                    "maxLength": 3000
                },
                "district": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "locationID": {
                    "type": "string"
                },
                "province": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                }
            }
        },
        "model.UpdateMediaRequest": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "maxLength": 255
                },
                "file_type": {
                    "type": "string",
                    "maxLength": 255
                },
                "hash": {
                    "type": "string",
                    "maxLength": 255
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "model.UpdateSportTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "model.UpdateUnitPriceRequest": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "model.UpdateUnitRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/model.UpdateAddressRequest"
                },
                "close_time": {
                    "type": "string"
                },
                "club_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 3000
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UpdateMediaRequest"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "open_time": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "sport_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UpdateSportTypeRequest"
                    }
                },
                "status": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                },
                "unit_prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UpdateUnitPriceRequest"
                    }
                },
                "unit_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UpdateUnitServiceRequest"
                    }
                }
            }
        },
        "model.UpdateUnitServiceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 3000
                },
                "icon": {
                    "type": "string",
                    "maxLength": 255
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "model.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "spb_bsa_internal_auth_model.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "spb_bsa_internal_role_model.PermissionResponse": {
            "type": "object",
            "properties": {
                "permission_id": {
                    "type": "string"
                },
                "permission_name": {
                    "type": "string"
                }
            }
        },
        "spb_bsa_internal_user_model.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "is_email_verified": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.RoleResponse"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.ErrorResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "utils.JSONResult": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "utils.Pagination": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "total items",
                    "type": "integer"
                },
                "items": {
                    "description": "number item per page",
                    "type": "integer"
                },
                "next_page": {
                    "type": "string"
                },
                "order_by": {
                    "description": "order by",
                    "type": "string"
                },
                "order_type": {
                    "description": "order type",
                    "type": "string"
                },
                "page": {
                    "description": "current page",
                    "type": "integer"
                },
                "prev_page": {
                    "type": "string"
                },
                "total_pages": {
                    "description": "total pages (count / items)",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Sport Booking API",
	Description:      "This is a swagger for Sport Booking APIs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
