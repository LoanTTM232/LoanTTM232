package {{.PathName}}

import (
	handler "spb/bsa/internal/{{.PathName}}/handler"
	"spb/bsa/internal/{{.PathName}}/service"
	"spb/bsa/pkg/middleware"

	"github.com/gofiber/fiber/v3"

	_ "spb/bsa/pkg/utils"
)

var (
	{{.StructName}}Service *service.Service
	{{.StructName}}Handler *handler.Handler
)

// @author: LoanTT
// @function: LoadModule
// @description: Register {{.ModuleName}} routes
// @param: router fiber.Router
// @param: customMiddleware middleware.ICustomMiddleware
func LoadModule(router fiber.Router, customMiddleware middleware.ICustomMiddleware) {
	{{.StructName}}Service = service.NewService()
	{{.StructName}}Handler = handler.NewHandler({{.StructName}}Service)

	{{.ModuleName}}Route := router.Group("/api/v1/{{.RouteName}}")
	{{.ModuleName}}Route.Get("/", customMiddleware.CheckAccess("{{.PathName}}:list"), {{.StructName}}Handler.GetAll)
	{{.ModuleName}}Route.Get("/:id", customMiddleware.CheckAccess("{{.PathName}}:read"), {{.StructName}}Handler.GetByID)
	{{.ModuleName}}Route.Post("/", customMiddleware.CheckAccess("{{.PathName}}:create"), {{.StructName}}Handler.Create)
	{{.ModuleName}}Route.Patch("/:id", customMiddleware.CheckAccess("{{.PathName}}:update"), {{.StructName}}Handler.Update)
	{{.ModuleName}}Route.Delete("/:id", customMiddleware.CheckAccess("{{.PathName}}:delete"), {{.StructName}}Handler.Delete)
}
